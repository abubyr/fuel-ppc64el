# This patch disables actual erasing of node's MBR and rebooting it
# when Fuel environment is being deleted or reset
--- /usr/share/mcollective/plugins/mcollective/agent/erase_node.rb    2016-06-08 14:42:37.000000000 +0000
+++ erase_node.rb    2016-11-11 16:04:27.597015233 +0000
@@ -106,19 +106,19 @@
 
       def reboot
         debug_msg("Beginning drive erase process")
-        File.open('/proc/sys/kernel/sysrq','w') { |file| file.write("1\n") }
+        #File.open('/proc/sys/kernel/sysrq','w') { |file| file.write("1\n") }
         # turning panic on oops and setting panic timeout to 10
-        File.open('/proc/sys/kernel/panic_on_oops', 'w') {|file| file.write("1\n")}
-        File.open('/proc/sys/kernel/panic','w') {|file| file.write("10\n")}
+        #File.open('/proc/sys/kernel/panic_on_oops', 'w') {|file| file.write("1\n")}
+        #File.open('/proc/sys/kernel/panic','w') {|file| file.write("10\n")}
 
         begin
           get_devices(type='all').each do |dev|
             debug_msg("erasing bootstrap code area in MBR of #{dev[:name]}")
             # clear out the boot code in MBR
-            system("dd if=/dev/zero of=/dev/#{dev[:name]} bs=446 count=1")
+            #system("dd if=/dev/zero of=/dev/#{dev[:name]} bs=446 count=1")
             # clear out the signature
-            system("dd if=/dev/zero of=/dev/#{dev[:name]} seek=510 bs=1 count=2")
-            system("sync")
+            #system("dd if=/dev/zero of=/dev/#{dev[:name]} seek=510 bs=1 count=2")
+            #system("sync")
           end
 
           reply[:erased] = true
@@ -138,7 +138,7 @@
           # sleep to let parent send response back to server
           sleep 5
           # Reboot the system
-          File.open('/proc/sysrq-trigger','w') { |file| file.write("b\n")}
+          #File.open('/proc/sysrq-trigger','w') { |file| file.write("b\n")}
         end
         Process.detach(pid)
       end
